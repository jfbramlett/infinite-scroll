group 'com.bramlettny'
version '1.0-SNAPSHOT'


buildscript {
    repositories {
        maven {
            credentials {
                username artifactoryUser
                password artifactoryPassword
            }
            url "https://bramlettny.org/nexus/repository/mvn-repo"
        }
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: "com.moowork.node"
apply plugin: 'java'
apply plugin: "groovy"
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        credentials {
            username artifactoryUser
            password artifactoryPassword
        }
        url "https://bramlettny.org/nexus/repository/mvn-repo"
    }
    mavenLocal()
}

dependencies {
    compile ('com.3street:common:1.0') {
        exclude module: "slf4j-log4j12"
        exclude module: "mongo-java-driver"
        exclude module: "guava"
    }
    compile 'com.google.guava:guava:21.0'

    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.lowagie:itext:2.1.7'
    compile 'com.google.apis:google-api-services-blogger:v3-rev53-1.22.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.8.5'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.5'
    compile 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.8.5'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.2'
    compile 'org.jsoup:jsoup:1.10.1'

    compile 'org.springframework.boot:spring-boot-starter-security:1.5.1.RELEASE'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.1.0.RELEASE'
    compile ('org.springframework.boot:spring-boot-starter-web:1.5.1.RELEASE') {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.cloud:spring-cloud-starter-sleuth:1.1.0.RELEASE'
    compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.98'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'


    testCompile 'junit:junit:4.12'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.4'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

node {
    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}")
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/.bin/webpack')
    args = ['--display-error-details']
}

processResources.dependsOn 'webpack'

clean.delete << file('src/main/resources/static/built/bundle.js')
